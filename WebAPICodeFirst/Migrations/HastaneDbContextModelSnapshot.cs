// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPICodeFirst.Context;

#nullable disable

namespace WebAPICodeFirst.Migrations
{
    [DbContext(typeof(HastaneDbContext))]
    partial class HastaneDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("WebAPICodeFirst.Model.Hasta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("HastaneId")
                        .HasColumnType("int");

                    b.Property<string>("Isim")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Klinik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("MuayeneTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Soyisim")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HastaneId");

                    b.ToTable("Hastalar");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HastaneId = 1,
                            Isim = "John",
                            Klinik = "Kardiyoloji",
                            MuayeneTarihi = new DateTime(2024, 1, 25, 14, 48, 1, 488, DateTimeKind.Local).AddTicks(7790),
                            Soyisim = "Doe"
                        },
                        new
                        {
                            Id = 2,
                            HastaneId = 2,
                            Isim = "Jane",
                            Klinik = "Üroloji",
                            MuayeneTarihi = new DateTime(2024, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Soyisim = "Doe"
                        });
                });

            modelBuilder.Entity("WebAPICodeFirst.Model.Hastane", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HastaneAd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Hastaneler");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adres = "Beşiktaş",
                            HastaneAd = "Sait Çiftçi Devlet Hastanesi"
                        },
                        new
                        {
                            Id = 2,
                            Adres = "Kartal",
                            HastaneAd = "Kartal Devlet Hastanesi"
                        });
                });

            modelBuilder.Entity("WebAPICodeFirst.Model.Hasta", b =>
                {
                    b.HasOne("WebAPICodeFirst.Model.Hastane", "Hastane")
                        .WithMany("Hastalar")
                        .HasForeignKey("HastaneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hastane");
                });

            modelBuilder.Entity("WebAPICodeFirst.Model.Hastane", b =>
                {
                    b.Navigation("Hastalar");
                });
#pragma warning restore 612, 618
        }
    }
}
